JPEG_URL="http://www.ijg.org/files/jpegsrc.v9.tar.gz"
PNG_URL=ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng12/libpng-1.2.50.tar.gz
FREETYPE_URL=http://download.savannah.gnu.org/releases/freetype/freetype-2.5.0.tar.gz

# FLUX_URL=~/Projects/ThinkSilicon/DFB/flux/
# DFB_URL=~/Projects/ThinkSilicon/DFB/dfb-mainline/
DIRECTFB_EXAMPLES_URL=http://directfb.org/downloads/Extras/DirectFB-examples-1.7.0.tar.gz
DFB_URL=git://git.directfb.org/git/directfb/core/DirectFB.git
FLUX_URL=git://git.directfb.org/git/directfb/core/flux

dfb-deps: jpeg-build png-build freetype-build flux-build #filesystem

# JPEG
jpeg-tar-url=$(JPEG_URL)
TAR_PROJECTS += jpeg

jpeg-build: jpeg gnu-tools
	cd $(SOURCES_DIR)/jpeg-archive/*/; \
	./configure --host=$(GNU_TOOLS_HOST) CC="$(GNU_TOOLS_PREFIX)gcc" --prefix="$(FILESYSTEM_ROOT)" && \
	$(MAKE) && \
	$(MAKE) install

jpeg:
	@echo "Getting libjpeg"

jpeg-clean: jpeg-archive-clean

# PNG
png-tar-url=$(PNG_URL)
TAR_PROJECTS += png

png-build: png zlib-build gnu-tools
	cd $(SOURCES_DIR)/png-archive/*/; mkdir -p objs/;  cd objs/ && \
	../configure --host=$(GNU_TOOLS_HOST) CC="$(GNU_TOOLS_PREFIX)gcc -I$(FILESYSTEM_ROOT)/include/" --with-sysroot="$(FILESYSTEM_ROOT)" --prefix="$(FILESYSTEM_ROOT)" --with-gnu-ld CFLAGS="-L$(FILESYSTEM_ROOT)/lib/"; \
	echo "[CONFIGURED]  -I$(FILESYSTEM_ROOT)/include/"; \
	$(MAKE) LDFLAGS=" -L/homes/cperivol/Projects/xilinx-zynq-bootstrap/fs/lib/" && \
	$(MAKE) install

png:
	@echo "Getting libpng"


# FreeType
freetype-tar-url=$(FREETYPE_URL)
TAR_PROJECTS += freetype

freetype-build: freetype zlib-build gnu-tools
	cd $(SOURCES_DIR)/freetype-archive/*/; ./autogen.sh \
	./configure --host=$(GNU_TOOLS_HOST) CC="$(GNU_TOOLS_PREFIX)gcc -I$(FILESYSTEM_ROOT)/include/" --with-sysroot="$(FILESYSTEM_ROOT)" --prefix="$(FILESYSTEM_ROOT)" --with-gnu-ld; \
	echo "[CONFIGURED]  $(LDFLAGS)" && \
	$(MAKE) CFLAGS=" -I$(FILESYSTEM_ROOT)/include/ -L$(FILESYSTEM_ROOT)/lib/" && \
	$(MAKE) install

freetype:
	@echo "Getting libfreetype"


freetype-clean: freetype-archive-clean

# Flux
flux-git-repo=$(FLUX_URL)
GIT_PROJECTS += flux

export PATH:=$(PATH):$(TOOLS_DIR)/usr/bin
flux-build: flux $(TOOLS_DIR)
	cd $(SOURCES_DIR)/flux-git ; \
	./autogen.sh --prefix=$(TOOLS_DIR) && \
	./configure --prefix=$(TOOLS_DIR) && $(MAKE) && $(MAKE) install

# DirectFB
directfb-git-repo=$(DFB_URL)
GIT_PROJECTS += directfb
PATH:=$(PATH):$(TOOLS_DIR)/bin

directfb-build: directfb dfb-deps gnu-tools
	[ -f $(SOURCES_DIR)/directfb-git/builder.sh ] || ln -s $(DATA_DIR)/dfb-builder.sh $(SOURCES_DIR)/directfb-git/builder.sh
	cd $(SOURCES_DIR)/directfb-git/; \
	./builder.sh --sysroot $(FILESYSTEM_ROOT) --enable-debug --bsroot $(ROOT_DIR) --disable-think2d

directfb:
	@echo "Getting directfb"

# DirectFB examples 1.7
directfb-examples-tar-url=$(DIRECTFB_EXAMPLES_URL)
TAR_PROJECTS += directfb-examples



directfb-examples-build: directfb-examples directfb-lazy
	cd $(SOURCES_DIR)/directfb-examples-archive/*/; mkdir -p objs/;  cd objs/; \
	../configure --host=$(GNU_TOOLS_HOST)  CC="$(GNU_TOOLS_PREFIX)gcc" CFLAGS=" --sysroot='$(FILESYSTEM_ROOT) -L$(FILESYSTEM_ROOT)/lib -L$(FILESYSTEM_ROOT)/usr/lib -L$(FILESYSTEM_ROOT)/usr/local/lib/ -I$(FILESYSTEM_ROOT)/usr/include/ -I$(FILESYSTEM_ROOT)/include/" LDFLAGS="-L$(FILESYSTEM_ROOT)/lib -L$(FILESYSTEM_ROOT)/usr/lib -L$(FILESYSTEM_ROOT)/usr/local/lib/ --sysroot=$(FILESYSTEM_ROOT)" PKG_CONFIG_PATH="$(FILESYSTEM_ROOT)/usr/lib/pkgconfig" --enable-debug && \
	$(MAKE) CFLAGS=" -I$(FILESYSTEM_ROOT)/include/ -L$(FILESYSTEM_ROOT)/lib/ -g --sysroot='$(FILESYSTEM_ROOT)'" LDFLAGS="--sysroot='$(FILESYSTEM_ROOT)'" && \
	$(MAKE) install DESTDIR=$(FILESYSTEM_ROOT)

directfb-examples-clean:
	cd $(SOURCES_DIR)/directfb-examples-archive/*/;  cd objs/; \
	$(MAKE) distclean; \
	rm -rf $(LAZY_DIR)/directfb-examples

directfb-examples:
	@echo "Getting directfb-examples"

.PHONY: dfb-all
dfb-all: directfb-lazy directfb-examples-lazy
