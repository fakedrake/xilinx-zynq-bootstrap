* Notes
  Here are some notes to keep in mind future generations.

** Qemu
   Well this was non-trivial but I think it should work. You need to
   get the xilinx edition of qemu or hardware will not be supprted
   properly. (the directories are off in the following)

   #+BEGIN_EXAMPLE
   git clone https://github.com/Xilinx/qemu
   git checkout xilinx-master
   ./configure --target-list="arm-softmmu,microblazeel-softmmu" --enable-fdt --disable-kvm
   make
   ./qemu-xilinx/arm-softmmu/qemu-system-arm -M xilinx-zynq-a9 -m 1024 -serial null -serial mon:stdio -dtb resources.qemu/qemu.dtb -kernel resources.qemu/zImage -initrd resources.qemu/ramdisk.img -nographic
   #+END_EXAMPLE

   Pay close attention to the last line.

   Now you probably want gdb right? Well here goes:

   #+BEGIN_EXAMPLE
   # gdb setup here
   #+END_EXAMPLE

   You also want to see some host files from qemu so you may load
   modules and stuff.

** ThinkLCDML
   Building thinklcdml is a bit weird. I know I should mount and everything but here is my workflow:

   Compile thinklcdml with =make=
   Then put the module in ramdisk:

   #+BEGIN_EXAMPLE
   cp ~/Projects/ThinkLCDML/thinklcdml.ko /homes/cperivol/Sandbox/xilinx-zynq-bootstrap/fs/lib/modules/3.6.0-xilinx/thinklcdml.ko &&
    date >> /homes/cperivol/Sandbox/xilinx-zynq-bootstrap/fs/last_touch && rm resources/uramdisk.img.gz &&
    ./bootstrap.sh --only ramdisk && cp resources/ramdisk.img resources.qemu/ramdisk.img
   #+END_EXAMPLE

*** Mem allocation
    Looks like fb_memsize is 0 when it should have been something
    else.
    #+BEGIN_EXAMPLE
    modprobe thinklcdml fb_memsize=1920000
    #+END_EXAMPLE


* Roadmap

** All android components
   Here is what we will need:

   | DONE  | Filename as downloaded                   | Filename on SD card | Description                                                                                                                      | Vendor                              |
   |-------+------------------------------------------+---------------------+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------|
   |       | BOOT_FMC.BIN & BOOT_HDMI.BIN             | BOOT.BIN            | Created using the EDK bootgen tool - contains the FSBL (First Stage Boot Loader), the FPGA bit-stream, and the U-Boot bootloader | Xylon                               |
   | x     | zImage                                   | zImage              | The Linux kernel                                                                                                                 | iVeia                               |
   | x     | devicetree_fmc.dtb & devicetree_hdmi.dtb | devicetree.dtb      | The Device Tree Blob                                                                                                             | iVeia                               |
   | kinda | ramdisk8M.image.gz                       | ramdisk8M.image.gz  | The Linux ramdisk, modified from the Xilinx's ZC702 release to run startup.sh on boot                                            | Xylon (with modifications by iVeia) |
   | kinda | startup.sh                               | startup.sh          | A script run at the end of boot (used to start Android)                                                                          | iVeia                               |
   | x     | root.img                                 | root.img            | The Android Root Filesystem                                                                                                      | iVeia                               |

   Check [[http://www.wiki.xilinx.com/Android%2BOn%2BZynq%2BGetting%2BStarted%2BGuide][the android xilinx wiki]] for more details

*** TODO Booting binary
** DirectFB
   I already have directfb compiling for arm with our very own
   hardware.

*** Tsi Drivers

**** DONE Thinklcdml
     Integrated.

**** TODO Think2d
     Compiles fine with the new kernel. I will need to test it with
     dfb.

*** Directfb

**** TODO Weird ioctl
     Directfb throws some weird ioctls that my driver cannot handle, I
     will need to investigate that.
